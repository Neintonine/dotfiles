# interpreter for shell commands
set shell powershell

# Shell commands with multiline definitions and/or positional arguments and/or
# quotes do not work in Windows. For anything but the simplest shell commands,
# it is recommended to create separate script files and simply call them here
# in commands or mappings.

# change the editor used in default editor keybinding
# There is no builtin terminal editor installed in Windows. The default editor
# mapping uses 'notepad' which launches in a separate GUI window. You may
# instead install a terminal editor of your choice and replace the default
# editor keybinding accordingly.
map e $$env:EDITOR $env:f

# change the pager used in default pager keybinding
# The standard pager used in Windows is 'more' which is not a very capable
# pager. You may instead install a pager of your choice and replace the default
# pager keybinding accordingly.
map i $$env:PAGER $env:f

# change 'doc' command to use a different pager
cmd doc $lf -doc | $env:PAGER

# leave some space at the top and the bottom of the screen
set scrolloff 10

# use enter for shell commands
map <enter> shell
map <delete> delete

cmd reload-config ${{
	$env:EDITOR ~/.config/lf/lfrc
    lf -remote "send $id source ~/.config/lf/lfrc"
}}

set drawbox

cmd mkdir %IFS=" "; mkdir
cmd touch %type nul >> 
map <c-n> push :mkdir<space>
map <c-N> push :touch<space>

set info size:time
set hidden!

cmd cd $cd "$*"

cmd share !{{
	echo $env:fx
}}

cmd extract !%LOCALAPPDATA%/lf/tools/extract.cmd $env:f
cmd download @node %LOCALAPPDATA%/lf/tools/download.js

cmd file-copy @node %LOCALAPPDATA%/lf/tools/clipFile.js $env:f --always-as-file
map <c-c> file-copy
cmd file-context-copy @node %LOCALAPPDATA%/lf/tools/clipFile.js $env:f
map <c-x> file-context-copy